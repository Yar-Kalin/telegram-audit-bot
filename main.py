import telebot
import os
import requests

# === –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
DEEPSEEK_API_KEY = os.getenv("DEEPSEEK_API_KEY")  # –ù–æ–≤—ã–π –∫–ª—é—á

# –ü—Ä–æ–≤–µ—Ä–∫–∞
if not TELEGRAM_TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_TOKEN")
if not DEEPSEEK_API_KEY:
    print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω DEEPSEEK_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(
        message,
        "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî SEO/UX-–∞—É–¥–∏—Ç –±–æ—Ç.\n\n"
        "–û—Ç–ø—Ä–∞–≤—å:\n"
        "`/–∞—É–¥–∏—Ç https://–≤–∞—à-—Å–∞–π—Ç.com`\n"
        "‚Äî –∏ –ø–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –æ—Ç—á—ë—Ç –∑–∞ 1 –º–∏–Ω—É—Ç—É.",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /–∞—É–¥–∏—Ç
@bot.message_handler(commands=['–∞—É–¥–∏—Ç'])
def audit(message):
    try:
        url = message.text.split()[1]
    except IndexError:
        bot.reply_to(
            message,
            "‚ùå –£–∫–∞–∂–∏—Ç–µ URL –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä:\n`/–∞—É–¥–∏—Ç https://example.com`",
            parse_mode="Markdown"
        )
        return

    bot.send_message(message.chat.id, "üîç –ì–µ–Ω–µ—Ä–∏—Ä—É—é SEO/UX-–∞—É–¥–∏—Ç –¥–ª—è —Å–∞–π—Ç–∞: " + url)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ —á–µ—Ä–µ–∑ DeepSeek
    try:
        headers = {
            "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
            "Content-Type": "application/json"
        }
        data = {
            "model": "deepseek-chat",
            "messages": [
                {"role": "user", "content": f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–∞–π—Ç {url} –∏ –¥–∞–π 10 SEO/UX —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π. "
                                           "–§–æ—Ä–º–∞—Ç: –ù–æ–º–µ—Ä. [–ö–∞—Ç–µ–≥–æ—Ä–∏—è] ‚Äî –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞: ... ‚Ä¢ –†–µ—à–µ–Ω–∏–µ: ..."}
            ],
            "max_tokens": 800
        }
        response = requests.post("https://api.deepseek.com/v1/chat/completions", json=data, headers=headers)
        result = response.json()
        report = result['choices'][0]['message']['content']
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}")
        return

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞
    try:
        bot.send_message(message.chat.id, f"üìå *SEO/UX –ê—É–¥–∏—Ç —Å–∞–π—Ç–∞ {url}:*\n\n{report}", parse_mode="Markdown")
    except:
        for i in range(0, len(report), 3500):
            bot.send_message(message.chat.id, report[i:i+3500])

    # –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
    bot.send_message(
        message.chat.id,
        "‚úÖ –ê—É–¥–∏—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!\n\n"
        "üì© –•–æ—Ç–∏—Ç–µ –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑?\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ: @–≤–∞—à_–Ω–∏–∫"
    )

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling(none_stop=True)
